plugins {
    id 'java'
    id 'idea'
    id "io.freefair.lombok" version "3.8.1"
    id 'maven'
    id "nebula.release" version "6.1.1"
    id 'org.springframework.boot' version '2.1.2.RELEASE'
}
apply plugin: 'io.spring.dependency-management'

repositories {
    jcenter()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters'
}

jar {
    baseName = project.name
}

bootJar.enabled=false
jar.enabled=true

group 'com.rnbwarden'
sourceCompatibility = 1.11
targetCompatibility = 1.11

repositories {
    maven { url "http://repo.spring.io/libs-snapshot" }
}

//noinspection GroovyAssignabilityCheck
configurations.all {
    exclude module: 'slf4j-log4j12'
}
dependencies {

    compileOnly 'org.springframework.boot:spring-boot-autoconfigure:2.2.4.RELEASE'
    compileOnly 'org.springframework.boot:spring-boot-dependencies:2.2.4.RELEASE'
    compileOnly 'org.springframework.boot:spring-boot:2.2.4.RELEASE'

    compile 'org.apache.commons:commons-lang3:3.9'
    compile 'org.apache.commons:commons-pool2:2.8.0'
    compile 'commons-io:commons-io:2.6'

    compileOnly 'org.springframework:spring-context:5.2.3.RELEASE'
    compileOnly 'org.springframework:spring-beans:5.2.3.RELEASE'
    compileOnly 'org.springframework:spring-core:5.2.3.RELEASE'
    compileOnly 'org.slf4j:slf4j-api:1.7.30'

    compileOnly 'com.fasterxml.jackson.core:jackson-databind:2.10.2'

    compileOnly 'org.springframework.data:spring-data-redis:2.2.4.RELEASE'
    //jedis
    compileOnly 'redis.clients:jedis:3.2.0'
    compileOnly 'com.redislabs:jredisearch:1.3.0'
    //lettuce
    compileOnly 'com.redislabs:lettusearch:1.12.3'
    compile ('com.redislabs:spring-redisearch:1.12.1') {
        exclude group: 'com.redislabs', module: 'lettusearch'
    }

    testCompile 'org.springframework.boot:spring-boot-starter-test:2.2.4.RELEASE'
    testCompile 'junit:junit:4.13'
    testCompile 'org.mockito:mockito-core:3.2.4'
}

sourceSets {
    test.compileClasspath += configurations.compileOnly
    test.runtimeClasspath += configurations.compileOnly
}

compileJava.dependsOn(processResources)

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

task generatePom {
    doLast {
        pom {}.writeTo("$buildDir/libs/${project.name}-${project.version}.pom")
    }
}
build.dependsOn(generatePom)